/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package project6.messenger;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowStateListener;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;

/**
 *
 * @author Nate H
 */
public class MessengerMain extends javax.swing.JFrame implements Runnable {

    /**
     * Creates new form MessengerMain
     */
    private Socket requestSocket;
    private ArrayList<String> buddies;
    private String message;
    private MessengerThread mThread;
    private HashMap<String, MessengerDialog> activeBuddies;
    private String uname;
    private String pword;
    
    public MessengerMain() throws UnknownHostException, IOException {
        initComponents();
        requestSocket = new Socket("163.11.29.197", 4220);
        buddies = new ArrayList<>();
        message =  new String();
        activeBuddies = new HashMap<String, MessengerDialog>();
        mThread = new MessengerThread(this, requestSocket);
        mThread.start();
    }
    
    public void loginUser(String u, char[] p) throws IOException{
        PrintWriter out = new PrintWriter(requestSocket.getOutputStream(), true);
        String pword = new String(p);
        out.println("1 " + u + " " + pword);
        uname = u;
        pword = p.toString();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        chatButton = new javax.swing.JButton();
        logoutButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(jList1);

        chatButton.setText("Chat!");
        chatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chatButtonActionPerformed(evt);
            }
        });

        logoutButton.setText("Logout");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Select buddy:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chatButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(logoutButton, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(chatButton)
                        .addGap(7, 7, 7)
                        .addComponent(logoutButton)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chatButtonActionPerformed
        int currIndex = jList1.getSelectedIndex();
        if(currIndex == -1){
            return;
        }
        MessengerDialog dialog = new MessengerDialog(this, false);

        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        dialog.setLocation(dim.width/2-dialog.getSize().width/2, dim.height/2-dialog.getSize().height/2);
        dialog.setTitle("Chat");
        String username = (String) jList1.getSelectedValue().toString();

        dialog.setUsername(username);
        this.activeBuddies.put(username, dialog);
        jLabel1.setText("Enter message to " + username + ": ");
        dialog.setVisible(true);
    }//GEN-LAST:event_chatButtonActionPerformed

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        try {
            PrintWriter out = new PrintWriter(requestSocket.getOutputStream(), true);
            out.println("2 " + this.uname);
            this.dispose();
        } catch (IOException ex) {
            Logger.getLogger(MessengerMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_logoutButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MessengerMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MessengerMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MessengerMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MessengerMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    MessengerMain main = new MessengerMain();
                    main.setTitle("Cedar Chat");
                    main.setVisible(true);
                    main.setLocationRelativeTo(null);
                    MessengerLogin dialog = new MessengerLogin(main, true);
                    dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                        @Override
                        public void windowClosing(java.awt.event.WindowEvent e) {
                            System.exit(0);
                        }
                    });
                    Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
                    dialog.setLocation(dim.width/2-dialog.getSize().width/2, dim.height/2-dialog.getSize().height/2);
                    dialog.setTitle("Login");
                    dialog.setVisible(true);
                } catch (UnknownHostException ex) {
                    Logger.getLogger(MessengerMain.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(MessengerMain.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton chatButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton logoutButton;
    // End of variables declaration//GEN-END:variables


//    @Override
//    public synchronized void addWindowStateListener(WindowStateListener l) {
//        super.addWindowStateListener(l); //To change body of generated methods, choose Tools | Templates.
//        new WindowAdapter(){
//            @Override
//            public void windowClosing(WindowEvent e){
//                 try {
//                    PrintWriter out = new PrintWriter(requestSocket.getOutputStream(), true);
//                    out.println("2 " + uname);
//                    dispose();
//                } catch (IOException ex) {
//                    Logger.getLogger(MessengerMain.class.getName()).log(Level.SEVERE, null, ex);
//                }
//
//            }
//        };
//    }
    
    /**
     * @return the requestSocket
     */
    public Socket getRequestSocket() {
        return requestSocket;
    }

    /**
     * @param requestSocket the requestSocket to set
     */
    public void setRequestSocket(Socket requestSocket) {
        this.requestSocket = requestSocket;
    }

    /**
     * @return the buddies
     */
    public ArrayList<String> getBuddies() {
        return buddies;
    }

    /**
     * @param buddies the buddies to set
     */
    public void setBuddies(ArrayList<String> buddies) {
        this.buddies = buddies;
    }

    /**
     * @return the message
     */
    public String getMessage() {
        return message;
    }

    /**
     * @param message the message to set
     */
    public void setMessage(String message) {
        this.message = message;
    }

    @Override
    public void run() {
        MessengerThread thisThread = (MessengerThread) Thread.
        currentThread();
        Socket thisSocket = thisThread.getSocket();
        try {
            BufferedReader in = new BufferedReader(new InputStreamReader(thisSocket.getInputStream()));
            PrintWriter out = new PrintWriter(thisSocket.getOutputStream(), true);
            String input = null;
            while(true){
              input = in.readLine();
              int command = Integer.parseInt(input.substring(0, 1));

              String username;
              int endUsername = input.indexOf(' ', 2);
              if(endUsername == -1){
                  username = input.substring(2);
              }
              else{
                  username = input.substring(2, endUsername);
              }
                System.out.println(username+".");
             
              
              switch(command){
                  case 3:
                      
                      MessengerDialog md = activeBuddies.get(username);
                      if (md == null){
                            md = new MessengerDialog(this, false);
                            
                            md.setUsername(username);
                            this.activeBuddies.put(username, md);
                            md.setVisible(true);
                      }
                      md.handleMessage(input);
                      break;
                  case 4:
                      buddies.add(username);
                      DefaultListModel model = new DefaultListModel();
                      jList1.setModel(model);
                      model.addElement(username);
                      break;
                  case 5:
                      buddies.remove(username);
                      DefaultListModel modelD = new DefaultListModel();
                      jList1.setModel(modelD);
                      modelD.removeElement(username);
                      break;
                  case 6:
                      System.out.println("successful login");
                      break;
                  case 7:
                      System.out.println("Failed login");
                      break;
              }
            }
        } catch (IOException ex) {
            Logger.getLogger(MessengerMain.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    
    //TODO: on chat click add to activeBuddies

    void sendMessage(String msg, String buddyUsername) {
    try {
            PrintWriter out = new PrintWriter(requestSocket.getOutputStream(), true);
            out.println("3 "+uname + " " + buddyUsername + " "+ msg);
        } catch (IOException ex) {
            Logger.getLogger(MessengerMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
